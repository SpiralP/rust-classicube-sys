name: Build and Release

on:
  pull_request:
    branches: [master, main]
  push:
    branches: ["*"]
    tags: ["*"]
  workflow_dispatch:

permissions:
  contents: read # for checkout

jobs:
  linux-nix:
    uses: SpiralP/github-reusable-workflows/.github/workflows/build.yml@1967e53ec3edabc5d81d6ec2e585c05318fe2567 # main
    concurrency:
      group: linux-nix-${{ github.ref }}
      cancel-in-progress: true

  windows-x86_64:
    runs-on: windows-2025
    permissions:
      contents: write # for publishing docs
    concurrency:
      group: windows-x86_64-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: SpiralP/rust-classicube-sys/.github/actions/install-build-test@main
        with:
          target: x86_64-pc-windows-msvc

      - uses: ./.github/actions/deploy-docs
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          target: x86_64-pc-windows-msvc

  windows-i686:
    runs-on: windows-2025
    concurrency:
      group: windows-i686-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: SpiralP/rust-classicube-sys/.github/actions/install-build-test@main
        with:
          target: i686-pc-windows-msvc

  linux-x86_64:
    runs-on: ubuntu-24.04
    concurrency:
      group: linux-x86_64-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: SpiralP/rust-classicube-sys/.github/actions/install-build-test@main
        with:
          target: x86_64-unknown-linux-gnu

  linux-i686:
    runs-on: ubuntu-24.04
    concurrency:
      group: linux-i686-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Install deps
        run: |
          sudo apt-get -y update
          sudo apt-get -y install gcc-multilib g++-multilib

      - uses: SpiralP/rust-classicube-sys/.github/actions/install-build-test@main
        with:
          target: i686-unknown-linux-gnu

  mac-x86_64:
    runs-on: macos-14
    concurrency:
      group: mac-x86_64-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: SpiralP/rust-classicube-sys/.github/actions/install-build-test@main
        with:
          target: x86_64-apple-darwin

  mac-aarch64:
    runs-on: macos-14
    concurrency:
      group: mac-aarch64-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: SpiralP/rust-classicube-sys/.github/actions/install-build-test@main
        with:
          target: aarch64-apple-darwin

  get-version-metadata:
    runs-on: ubuntu-24.04
    needs:
      - linux-nix
      - windows-x86_64
      - windows-i686
      - linux-x86_64
      - linux-i686
      - mac-x86_64
      - mac-aarch64
    if: "${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && ! startsWith(github.event.head_commit.message, 'chore(release): ') }}"
    permissions:
      contents: read # for checkout
    outputs:
      version-metadata: ${{ steps.get-version-metadata.outputs.version-metadata }}
    concurrency:
      group: get-version-metadata-${{ github.ref }}
      cancel-in-progress: false # do not cancel in-progress jobs
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: recursive
      - id: get-version-metadata
        run: |
          classicube_version="$(git -C ./ClassiCube/ describe --exact-match --tags HEAD)"
          test -z "$classicube_version" && echo "classicube_version is empty" && exit 1
          version_metadata="ClassiCube $classicube_version"
          echo "version-metadata=$version_metadata" | tee -a "$GITHUB_OUTPUT"

  release:
    uses: SpiralP/github-reusable-workflows/.github/workflows/release.yml@1967e53ec3edabc5d81d6ec2e585c05318fe2567 # main
    needs: get-version-metadata
    if: "${{ needs.get-version-metadata.outputs.version-metadata }}"
    permissions: {} # none, since we use a custom app
    concurrency:
      group: release-${{ github.ref }}
      cancel-in-progress: false # do not cancel in-progress jobs
    with:
      cargo-publish: true
      environment-name: release
      replace-files: |
        Cargo.lock
        Cargo.toml
      package-name: classicube-sys
      version-metadata: ${{ needs.get-version-metadata.outputs.version-metadata }}
    secrets:
      app-id: ${{ secrets.APP_ID }}
      app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      cargo-registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
