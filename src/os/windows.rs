/* automatically generated by rust-bindgen */

#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IGameComponent {
  pub Init: ::std::option::Option<unsafe extern "C" fn()>,
  pub Free: ::std::option::Option<unsafe extern "C" fn()>,
  pub Reset: ::std::option::Option<unsafe extern "C" fn()>,
  pub OnNewMap: ::std::option::Option<unsafe extern "C" fn()>,
  pub OnNewMapLoaded: ::std::option::Option<unsafe extern "C" fn()>,
  pub next: *mut IGameComponent,
}
#[test]
fn bindgen_test_layout_IGameComponent() {
  assert_eq!(
    ::std::mem::size_of::<IGameComponent>(),
    48usize,
    concat!("Size of: ", stringify!(IGameComponent))
  );
  assert_eq!(
    ::std::mem::align_of::<IGameComponent>(),
    8usize,
    concat!("Alignment of ", stringify!(IGameComponent))
  );
  assert_eq!(
    unsafe { &(*(::std::ptr::null::<IGameComponent>())).Init as *const _ as usize },
    0usize,
    concat!(
      "Offset of field: ",
      stringify!(IGameComponent),
      "::",
      stringify!(Init)
    )
  );
  assert_eq!(
    unsafe { &(*(::std::ptr::null::<IGameComponent>())).Free as *const _ as usize },
    8usize,
    concat!(
      "Offset of field: ",
      stringify!(IGameComponent),
      "::",
      stringify!(Free)
    )
  );
  assert_eq!(
    unsafe { &(*(::std::ptr::null::<IGameComponent>())).Reset as *const _ as usize },
    16usize,
    concat!(
      "Offset of field: ",
      stringify!(IGameComponent),
      "::",
      stringify!(Reset)
    )
  );
  assert_eq!(
    unsafe { &(*(::std::ptr::null::<IGameComponent>())).OnNewMap as *const _ as usize },
    24usize,
    concat!(
      "Offset of field: ",
      stringify!(IGameComponent),
      "::",
      stringify!(OnNewMap)
    )
  );
  assert_eq!(
    unsafe { &(*(::std::ptr::null::<IGameComponent>())).OnNewMapLoaded as *const _ as usize },
    32usize,
    concat!(
      "Offset of field: ",
      stringify!(IGameComponent),
      "::",
      stringify!(OnNewMapLoaded)
    )
  );
  assert_eq!(
    unsafe { &(*(::std::ptr::null::<IGameComponent>())).next as *const _ as usize },
    40usize,
    concat!(
      "Offset of field: ",
      stringify!(IGameComponent),
      "::",
      stringify!(next)
    )
  );
}
